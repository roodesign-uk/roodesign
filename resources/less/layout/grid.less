//grids inspired by tailwind grid classes: https://tailwindcss.com/docs/grid-column

//build grid item classes
#grid {
    .span(@prefix: '', @counter: 1) when (@counter <= @grid-limit) {
        .@{prefix}-col-span-@{counter} {
            grid-column: span @counter / span @counter;
        }
        #grid > .span(@prefix, @counter + 1);
    }
    .start(@prefix: '', @counter: 1) when (@counter <= @grid-limit) {
        .@{prefix}-col-start-@{counter} {
            grid-column-start: @counter;
        }
        #grid > .start(@prefix, @counter + 1);
    }
}

.grid {
    grid-gap: unit((@gap * 2 / @base),rem);
    grid-gap: ~"calc( var(--gap) * 2)"; 

    .break-min({
        display: grid;
        grid-template-columns: repeat(8, 1fr);
        grid-auto-flow: row;

        //default grid occupancy for items without class
        >* {
            grid-column: 1 / span 8;
        }

        //create [prefix]-col-span-[1-8] classes:
        #grid > .span(min);

        //create [prefix]-col-start-[1-8] classes:
        #grid > .start(min);
    });

    .break-mid({
        //create [prefix]-col-span-[1-8] classes:
        #grid > .span(mid);

        //create [prefix]-col-start-[1-8] classes:
        #grid > .start(mid);
    });

    .break-max({
        //default grid occupancy for items without class
        >* {
            grid-column: 2 / span 7;
        }

        //create [prefix]-col-span-[1-8] classes:
        #grid > .span(max);

        //create [prefix]-col-start-[1-8] classes:
        #grid > .start(max);
    });
}
