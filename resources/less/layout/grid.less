//grids inspired by tailwind grid classes: https://tailwindcss.com/docs/grid-column

//build grid item classes
#grid {
    .span(@prefix: ~'', @counter: 1) when (@counter <= @grid-limit) {
        .@{prefix}col-span-@{counter} {
            grid-column: span @counter / span @counter;
        }
        #grid > .span(@prefix, @counter + 1);
    }
    .start(@prefix: ~'', @counter: 1) when (@counter <= @grid-limit) {
        .@{prefix}col-start-@{counter} {
            grid-column-start: @counter;
        }
        #grid > .start(@prefix, @counter + 1);
    }
}

.grid {
    grid-gap: unit((@gap / @base),rem);
    grid-gap: var(--gap); 
    display: grid;
    grid-auto-flow: row;

    grid-template-columns: repeat(@grid-limit, 1fr);
        
    //default grid occupancy for items without class
    >* {
        grid-column: 1 / -1;
    }

    //create [prefix]-col-span-[1-8] classes:
    #grid > .span();

    //create [prefix]-col-start-[1-8] classes:
    #grid > .start();

    .break-min({
        
        //create [prefix]-col-span-[1-8] classes:
        #grid > .span(min-);

        //create [prefix]-col-start-[1-8] classes:
        #grid > .start(min-);
    });

    .break-mid({
        //create [prefix]-col-span-[1-8] classes:
        #grid > .span(mid-);

        //create [prefix]-col-start-[1-8] classes:
        #grid > .start(mid-);
    });

    .break-max({
        //create [prefix]-col-span-[1-8] classes:
        #grid > .span(max-);

        //create [prefix]-col-start-[1-8] classes:
        #grid > .start(max-);
    });
}
