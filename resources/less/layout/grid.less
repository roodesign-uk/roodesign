//build grid item classes
#grid {
    .span(@breakpoint: min, @counter: 1) when (@counter <= @grid-limit) {
        @bpToCall: ~"break-@{breakpoint}-rem";
        @media screen and (min-width: (@@bpToCall)) {
            .@{breakpoint}-col-span-@{counter} {
                grid-column: span @counter / span @counter;
            }
        }
        #grid > .span(@breakpoint, @counter + 1);
    }
    .start(@breakpoint: min, @counter: 1) when (@counter <= @grid-limit) {
        @bpToCall: ~"break-@{breakpoint}-rem";
        @media screen and (min-width: (@@bpToCall)) {
            .@{breakpoint}-col-start-@{counter} {
                grid-column-start: @counter;
            }
        }
        #grid > .start(@breakpoint, @counter + 1);
    }
}

.grid {
    grid-gap: unit((@gap * 2 / @base),rem);
    grid-gap: ~"calc( var(--gap) * 2)"; 

    #grid > .span(min);
    #grid > .span(mid);
    #grid > .span(max);

    #grid > .start(min);
    #grid > .start(mid);
    #grid > .start(max);
}

@media screen and (min-width: (@break-min-rem)) {

    .grid {
        display: grid;
        grid-template-columns: repeat(8, 1fr);
        grid-auto-flow: row;

        //default grid occupancy for items without class
        >* {
            grid-column: 1 / span 8;
        }

    }
    
}

@media screen and (min-width: (@break-max-rem)) {

    .grid {
        //default grid occupancy for items without class
        >* {
            grid-column: 2 / span 7;
        }
    }

}
